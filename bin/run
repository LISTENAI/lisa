#!/usr/bin/env node
if (process.argv.indexOf('--debug') >= 0) {
  process.env.DEBUG = '*'
  process.argv = process.argv.filter(item => item !== '--debug')
}

const Sentry = require('@sentry/node')
Sentry.init({
  dsn: 'http://043e699dd29e4c6fb1de231a729f8aa4@sentry.iflyos.cn/95',
  tracesSampleRate: 1.0,
})

// require('@oclif/command').run(process.argv.slice(2), {root: __dirname, userPlugins: false})

require('@oclif/command').run()
.then(require('@oclif/command/flush'))
.catch((error) => {
  const oclifHandler = require('@oclif/errors/handle')
  // do any extra work with error
  const Configstore = require('configstore')
  const config = new Configstore('lisa')
  const lisaUserInfo = config.get('userInfo') || {}
  Sentry.configureScope(scope => {
    scope.setTag('userid', lisaUserInfo.id);
    scope.setTag('username', lisaUserInfo.username);
    scope.setTag('accountName', lisaUserInfo.accountName);
    scope.setTag('email', lisaUserInfo.email);
    scope.setTag('accessToken', lisaUserInfo.accessToken);
  });
  Sentry.captureException(error)
  return oclifHandler(error)
})


