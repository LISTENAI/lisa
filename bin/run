#!/usr/bin/env node
if (process.argv.indexOf('--debug') >= 0) {
  process.env.DEBUG = '*'
  process.argv = process.argv.filter(item => item !== '--debug')
}

if (process.env.LISA_PREFIX) {
  const oldPath = process.env[findPathKey()]
  const newPath = oldPath.split(';').filter(item => {
    // 保留git和系统相关Path
    return item.toLowerCase().indexOf('git') > 0 || item.toLowerCase().indexOf('windows') > 0
  })
  newPath.push(process.env.LISA_PREFIX)
  process.env[findPathKey()] = `${newPath.join(';')}`
  delete process.env['HOME']
}

function findPathKey() {
  for (const key in process.env) {
    if (key.toLowerCase() == 'path') {
      return key
    }
  }
  return 'PATH'
}

const Sentry = require('@sentry/node')
Sentry.init({
  dsn: 'http://043e699dd29e4c6fb1de231a729f8aa4@sentry.iflyos.cn/95',
  tracesSampleRate: 1.0,
})

// require('@oclif/command').run(process.argv.slice(2), {root: __dirname, userPlugins: false})

require('@oclif/command').run()
.then(require('@oclif/command/flush'))
.catch(async (error) => {
  const oclifHandler = require('@oclif/errors/handle')
  // do any extra work with error
  const Configstore = require('configstore')
  const config = new Configstore('lisa')
  const lisaUserInfo = config.get('userInfo') || {}

  await new Promise((res, _rej) => {
    Sentry.withScope(function(scope) {
      scope.setTag('lisaVersion', config.get('version') || '');
      scope.setTag('userid', lisaUserInfo.id || '');
      scope.setTag('username', lisaUserInfo.username || '');
      scope.setTag('accountName', lisaUserInfo.accountName || '');
      scope.setTag('email', lisaUserInfo.email || '');
      scope.setTag('accessToken', lisaUserInfo.accessToken || '');
      Sentry.captureException(error, () => {
        res()
      });
    });
  })
  return oclifHandler(error)
})


