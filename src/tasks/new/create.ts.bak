import {job, fs, application} from '@listenai/lisa_core'
import * as path from 'path'
module.exports = () => {
  job('new:create', {
    title: '创建项目目录/文件',
    task: async (ctx: { base: any }) => {
      const pjPath = fs.project.join(application.newCtx.projectName)
      // await fs.remove(application.newCtx.projectName)
      if (fs.existsSync(pjPath)) {
        throw new Error('该目录下已经存在相同名称的项目，请更换项目名称或更换项目目录。')
      }

      fs.project.root = pjPath
      fs.project.template_path = path.join(__dirname, '../../public/newProject')

      const projectDirTree = [
        'assets',
        'config/alias',
        'config/environment',
        'config/thresholds',
        'deps/tones_include',
        'optimize/audio_record',
        'optimize/audio_record_data',
        'spec/dataset/audio_addon',
        'spec/dataset/audio_original',
        'target/log',
        'test_report',
      ]
      await fs.project.mkdir(...projectDirTree)
      await fs.project.copy('spec/test.csk', 'spec/test.csk')
      await fs.project.copy('config/interact.csk', 'config/interact.csk')
      await fs.project.copy('config/tones.csk', 'config/tones.csk')
      await fs.project.copy('config/keywords.csk', 'config/keywords.csk')
      await fs.project.copy('config.js', 'config.js')
      await fs.project.copy('task.js', 'task.js')
      await fs.project.template('project.csk.ejs', 'project.csk', {name: application.newCtx.projectName})
      await fs.project.template('base.csk.ejs', 'config/base.csk', ctx.base)
      await fs.project.template('gitignore.ejs', '.gitignore', {ignore: [
        'target',
        'optimize/audio_record/**',
        'spec/dataset/audio_original/**',
        'node_modules',
      ].join('\n')})
    },
  })
}
